package main

import (
	"database/sql"
	"log"
	"os"

	"github.com/joho/godotenv"

	"github.com/gofiber/fiber/v2"
	"github.com/yeawyow/gateway/db"
	"github.com/yeawyow/gateway/handler"
)

var DB *sql.DB

func main() {
	// ‡πÇ‡∏´‡∏•‡∏î .env
	if err := godotenv.Load(); err != nil {
		log.Println("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå .env (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏ñ‡πâ‡∏≤ set env ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß)")
	}

	// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ DB
	if err := db.Connect(); err != nil {
		log.Fatal("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database ‡πÑ‡∏î‡πâ:", err)
	}

	// ‡∏î‡∏∂‡∏á cert path ‡∏à‡∏≤‡∏Å ENV (‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô)
	certFile := os.Getenv("SSL_CERT_FILE")
	if certFile == "" {
		certFile = "/etc/ssl/moph/wildcard_moph_go_th.crt"
	}
	keyFile := os.Getenv("SSL_KEY_FILE")
	if keyFile == "" {
		keyFile = "/etc/ssl/moph/wildcard_moph_go_th.key"
	}

	// ‡∏™‡∏£‡πâ‡∏≤‡∏á Fiber app
	app := fiber.New()

	// Auth Group
	auth := app.Group("/auth")
	auth.Get("/line", handler.LineHandler)

	// API Group
	api := app.Group("/api/v1")
	api.Post("/sendmoph", func(c *fiber.Ctx) error {
		return c.SendString("sendmoph")
	})
	api.Post("/gentoken", func(c *fiber.Ctx) error {
		return c.SendString("gentoken")
	})

	// ‡πÄ‡∏õ‡∏¥‡∏î HTTPS ‡∏ó‡∏µ‡πà port 3001
	log.Println("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ HTTPS ‡∏ó‡∏µ‡πà https://localhost:3001/")
	if err := app.ListenTLS(":3001", certFile, keyFile); err != nil {
		log.Fatal("‚ùå ‡πÄ‡∏õ‡∏¥‡∏î HTTPS ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err)
	}
}
